#!/bin/zsh

# oh-my-zsh
ZSH=${ZSH:-"${HOME}/.oh-my-zsh"}
ZSH_CUSTOM=${ZSH_CUSTOM:-"${ZSH}/custom"}
ZSHRC="${HOME}/.zshrc"

if [[ ! -d "${ZSH}" ]]; then
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
fi;

# oh-my-zsh > theme
SPACESHIP_HOME="${ZSH_CUSTOM}/themes/spaceship-prompt"

if [[ ! -d "${SPACESHIP_HOME}" ]]; then
    SPACESHIP_REMOTE="https://github.com/spaceship-prompt/spaceship-prompt.git"
    
    git clone --depth=1 "${SPACESHIP_REMOTE}" "${SPACESHIP_HOME}"
    ln -s "${SPACESHIP_HOME}/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme"
    sed -i 's/ZSH_THEME=\".\+\"/ZSH_THEME="spaceship"/' "${ZSHRC}"
fi;

# oh-my-zsh > theme > options
echo "[+] Configuring spaceship theme"

sed -zri 's/SPACESHIP_PROMPT_ORDER=\([[:cntrl:][:print:]]+\)//g' "${ZSHRC}"
sed -zri 's/\n{3,}/\n/g' "${ZSHRC}"

cat << 'SPACESHIP_OPTIONS' >> "${ZSHRC}"

SPACESHIP_PROMPT_ORDER=(
time          # Time stamps section
user          # Username section
dir           # Current directory section
host          # Hostname section
git           # Git section (git_branch + git_status)
package       # Package version
node          # Node.js section
docker        # Docker section
aws           # Amazon Web Services section
gcloud        # Google Cloud Platform section
venv          # virtualenv section
pyenv         # Pyenv section
dotnet        # .NET section
kubectl       # Kubectl context section
exec_time     # Execution time
line_sep      # Line break
vi_mode       # Vi-mode indicator
jobs          # Background jobs indicator
exit_code     # Exit code section
char          # Prompt character
)

SPACESHIP_OPTIONS

# oh-my-zsh > plugins
sed -i 's/plugins=\(.\+\)/plugins=(git fzf virtualenv)/' "${ZSHRC}"

# apply shell changes
source "${HOME}/.zshrc"

# python > pentest virtual env
if [[ "${USER}" == "pentester" ]]; then
    echo "[+] Applying some specific configurations for pentesting"
    
    VENV_HOME="${HOME}/.python-venv"
    PENTEST_VENV_HOME="${VENV_HOME}/pentest"

    if [[ ! -d "${PENTEST_VENV_HOME}" ]]; then
        mkdir -p "${VENV_HOME}"
        python3 -m venv "${PENTEST_VENV_HOME}"

        echo "source ${PENTEST_VENV_HOME}/bin/activate" >> "${HOME}/.zprofile"
        source "${HOME}/.zprofile"
    fi;
fi;

# Git Prune Script
LOCAL_BIN_PATH="${HOME}/.local/bin"
if [[ ! -f  "${LOCAL_BIN_PATH}/git-prune" ]]; then
    mkdir -p "${LOCAL_BIN_PATH}"

    echo "[+] Copying git-prune script to ${LOCAL_BIN_PATH}"
    cp git-prune "${LOCAL_BIN_PATH}" && chmod +x "${LOCAL_BIN_PATH}/git-prune"
fi;
