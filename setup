#!/bin/bash

__BASE_DIR=$(dirname "$0")
__JSON_PACKAGES=$(cat package.json)

# import functions definition and variables
. $__BASE_DIR/lib/json.sh
. $__BASE_DIR/lib/colors.sh
. $__BASE_DIR/lib/console.sh
. $__BASE_DIR/lib/installer.sh

function main {

    install_required_packages
    
    for group in $(package_groups); do

        console::title "Working on ${group}"

        case "${group}" in 
            "packages")
                install_standalone_packages
            ;;
            "custom-ppa-repositories")
                install_from_custom_ppa_repositories
            ;;
        esac
    done

    show_installation_report
    cleanup_installation
}

function install_required_packages {

    console::title "Installing core packages from the oficial PPA respository"

    packages=(
        wget
        curl 
        jq 
        zip 
        gdebi 
        apt-transport-https 
        ca-certificates 
        software-properties-common 
        lsb-release 
        vim 
        zsh 
        fzf 
        tilix 
        openjdk-11-jdk 
        python3 
        python3-pip 
        python3-venv
        flameshot
    )

    apt_install "${packages[@]}"

    console::log "Done"
}

function package_groups {
    local groups_array=$(json_keys "${__JSON_PACKAGES}")
    
    echo "$(json_array_to_string_list "${groups_array}")"
}

function install_standalone_packages {
    local packages_array=$(json_keys "${__JSON_PACKAGES}" ".packages")
    local packages=$(json_array_to_string_list "${packages_array}")

    for package in $packages; do
        local properties=$(json_value "${__JSON_PACKAGES}" ".packages.${package}")

        console::info "Installing ${package}"
        install_package "${package}" "${properties}"

        console::break_line
    done

    console::log "Done"
}

function install_from_custom_ppa_repositories {
    local packages_array=$(json_keys "${__JSON_PACKAGES}" ".custom-ppa-repositories")
    local packages=$(json_array_to_string_list "${packages_array}")

    for package in $packages; do
        local properties=$(json_value "${__JSON_PACKAGES}" ".custom-ppa-repositories.${package}")

        console::notice "Adding PPA repository for ${package}"
        add_custom_ppa "${package}" "${properties}"
    done

    console::break_line

    console::info "Installing/Upgrading packages: ${packages}"
    apt_install "${packages[@]}"

    console::log "Done"
}

function show_installation_report {
    local json_object=$(echo "${__JSON_PACKAGES}" | jq '.packages + ."custom-ppa-repositories" | to_entries | map({(.key|tostring): .value.executable}) | add')
    
    local packages_array=$(json_keys "${json_object}")
    local packages=$(json_array_to_string_list "${packages_array}")

    console::header "Packages Installation Report"

    for package in $packages; do

        local executable=$(json_value "$json_object" ".${package}")
        local status=$(is_installed "${executable}")

        [[ -z "${status}" ]] && status="Not Installed" || status="Installed"
        status="\e[${FG_COLOR_DARK_GRAY}m${status}"

        local message=$(console::pad_end "${package} " "." "35")

        console::info "${message} ${status}"
    done

    console::break_line
}

main
